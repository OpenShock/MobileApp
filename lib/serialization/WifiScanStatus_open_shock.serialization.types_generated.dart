// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library open_shock.serialization.types;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


class WifiScanStatus {
  final int value;
  const WifiScanStatus._(this.value);

  factory WifiScanStatus.fromValue(int value) {
    final result = values[value];
    if (result == null) {
        throw StateError('Invalid value $value for bit flag enum WifiScanStatus');
    }
    return result;
  }

  static WifiScanStatus? _createOrNull(int? value) => 
      value == null ? null : WifiScanStatus.fromValue(value);

  static const int minValue = 0;
  static const int maxValue = 5;
  static bool containsValue(int value) => values.containsKey(value);

  static const WifiScanStatus Started = WifiScanStatus._(0);
  static const WifiScanStatus InProgress = WifiScanStatus._(1);
  static const WifiScanStatus Completed = WifiScanStatus._(2);
  static const WifiScanStatus TimedOut = WifiScanStatus._(3);
  static const WifiScanStatus Aborted = WifiScanStatus._(4);
  static const WifiScanStatus Error = WifiScanStatus._(5);
  static const Map<int, WifiScanStatus> values = {
    0: Started,
    1: InProgress,
    2: Completed,
    3: TimedOut,
    4: Aborted,
    5: Error};

  static const fb.Reader<WifiScanStatus> reader = _WifiScanStatusReader();

  @override
  String toString() {
    return 'WifiScanStatus{value: $value}';
  }
}

class _WifiScanStatusReader extends fb.Reader<WifiScanStatus> {
  const _WifiScanStatusReader();

  @override
  int get size => 1;

  @override
  WifiScanStatus read(fb.BufferContext bc, int offset) =>
      WifiScanStatus.fromValue(const fb.Uint8Reader().read(bc, offset));
}

